{"version":3,"file":"60547fd5f7927c08e4d1fec4424122f6b20939b5-974f38c9d4a142924855.js","mappings":"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","sources":["webpack://icjllc.com/./src/components/link.jsx","webpack://icjllc.com/./src/components/footer.jsx","webpack://icjllc.com/./src/components/seo.jsx","webpack://icjllc.com/./node_modules/@mui/material/Grid/GridContext.js","webpack://icjllc.com/./node_modules/@mui/material/Grid/gridClasses.js","webpack://icjllc.com/./node_modules/@mui/material/Grid/Grid.js"],"sourcesContent":["import * as React from 'react';\nimport { navigate } from 'gatsby';\nimport MuiLink from '@mui/material/Link';\n\nexport const Link = ({ children, href }) => {\n  const internal = /^\\/(?!\\/)/.test(href);\n\n  return (\n    <MuiLink\n      href={href}\n      target={internal ? '_self' : '_blank'}\n      onClick={e => {\n        if (internal) {\n          e.preventDefault();\n          navigate(href);\n        }\n      }}\n    >\n      {children}\n    </MuiLink>\n  );\n};\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport { Link } from '../components/link';\nimport logo from '../images/icj-black.png';\n\nexport const Footer = () => (\n  <Box>\n    <Container\n      sx={{\n        py: 4\n      }}\n    >\n      <Box align='center' sx={{ my: 6 }}>\n        {[\n          {\n            label: 'Privacy',\n            link: '/privacy/'\n          },\n          {\n            label: 'SDGs',\n            link: '/sdgs/'\n          }\n        ].map(({ label, link }, i) => (\n          <Box key={i} component='span' sx={{ m: 1 }}>\n            <Link href={link}>{label}</Link>\n          </Box>\n        ))}\n      </Box>\n      <Box align='center'>\n        <img\n          src={logo}\n          alt='ICJ'\n          style={{\n            display: 'block',\n            width: '40px',\n            pointerEvents: 'none'\n          }}\n        />\n        <Typography sx={{ fontSize: '10px' }}>&copy; ICJ LLC</Typography>\n      </Box>\n    </Container>\n  </Box>\n);\n","import * as React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { useLocation } from '@gatsbyjs/reach-router';\n\nexport const Seo = ({ children, title: pageTitle }) => {\n  const {\n    site: {\n      siteMetadata: { siteUrl, title: siteTitle, description }\n    }\n  } = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          siteUrl\n          title\n          description\n        }\n      }\n    }\n  `);\n\n  const { pathname } = useLocation();\n  const isTop = pathname === '/';\n\n  const title = pageTitle ? `${pageTitle} | ${siteTitle}` : siteTitle;\n\n  return (\n    <>\n      <title>{title}</title>\n      <meta name='description' content={description} />\n      <meta property='og:title' content={title} />\n      <meta property='og:site_name' content={siteTitle} />\n      <meta property='og:type' content={isTop ? 'website' : 'article'} />\n      <meta property='og:url' content={`${siteUrl}${pathname}`} />\n      <meta property='og:description' content={description} />\n      <meta property='og:image' content={`${siteUrl}/ogp.png`} />\n      <meta property='og:image:secure_url' content={`${siteUrl}/ogp.png`} />\n      <meta property='og:image:type' content='image/png' />\n      <meta property='og:image:width' content='1200' />\n      <meta property='og:image:height' content='630' />\n      <meta property='og:locale' content='ja_JP' />\n      <link rel='preconnect' href='https://fonts.googleapis.com' />\n      <link\n        rel='preconnect'\n        href='https://fonts.gstatic.com'\n        crossOrigin='true'\n      />\n      <link\n        href='https://fonts.googleapis.com/css2?family=Josefin+Sans:wght@400;700&family=Noto+Sans+JP:wght@400;700&display=swap'\n        rel='stylesheet'\n      />\n      {children}\n    </>\n  );\n};\n","'use client';\n\nimport * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst GridContext = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  GridContext.displayName = 'GridContext';\n}\nexport default GridContext;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getGridUtilityClass(slot) {\n  return generateUtilityClass('MuiGrid', slot);\n}\nconst SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst DIRECTIONS = ['column-reverse', 'column', 'row-reverse', 'row'];\nconst WRAPS = ['nowrap', 'wrap-reverse', 'wrap'];\nconst GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nconst gridClasses = generateUtilityClasses('MuiGrid', ['root', 'container', 'item', 'zeroMinWidth',\n// spacings\n...SPACINGS.map(spacing => `spacing-xs-${spacing}`),\n// direction values\n...DIRECTIONS.map(direction => `direction-xs-${direction}`),\n// wrap values\n...WRAPS.map(wrap => `wrap-xs-${wrap}`),\n// grid sizes for all breakpoints\n...GRID_SIZES.map(size => `grid-xs-${size}`), ...GRID_SIZES.map(size => `grid-sm-${size}`), ...GRID_SIZES.map(size => `grid-md-${size}`), ...GRID_SIZES.map(size => `grid-lg-${size}`), ...GRID_SIZES.map(size => `grid-xl-${size}`)]);\nexport default gridClasses;","'use client';\n\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"columns\", \"columnSpacing\", \"component\", \"container\", \"direction\", \"item\", \"rowSpacing\", \"spacing\", \"wrap\", \"zeroMinWidth\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useTheme from '../styles/useTheme';\nimport GridContext from './GridContext';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction getOffset(val) {\n  const parse = parseFloat(val);\n  return `${parse}${String(val).replace(String(parse), '') || 'px'}`;\n}\nexport function generateGrid({\n  theme,\n  ownerState\n}) {\n  let size;\n  return theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n    // Use side effect over immutability for better performance.\n    let styles = {};\n    if (ownerState[breakpoint]) {\n      size = ownerState[breakpoint];\n    }\n    if (!size) {\n      return globalStyles;\n    }\n    if (size === true) {\n      // For the auto layouting\n      styles = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n    } else if (size === 'auto') {\n      styles = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        flexShrink: 0,\n        maxWidth: 'none',\n        width: 'auto'\n      };\n    } else {\n      const columnsBreakpointValues = resolveBreakpointValues({\n        values: ownerState.columns,\n        breakpoints: theme.breakpoints.values\n      });\n      const columnValue = typeof columnsBreakpointValues === 'object' ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues;\n      if (columnValue === undefined || columnValue === null) {\n        return globalStyles;\n      }\n      // Keep 7 significant numbers.\n      const width = `${Math.round(size / columnValue * 10e7) / 10e5}%`;\n      let more = {};\n      if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {\n        const themeSpacing = theme.spacing(ownerState.columnSpacing);\n        if (themeSpacing !== '0px') {\n          const fullWidth = `calc(${width} + ${getOffset(themeSpacing)})`;\n          more = {\n            flexBasis: fullWidth,\n            maxWidth: fullWidth\n          };\n        }\n      }\n\n      // Close to the bootstrap implementation:\n      // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n      styles = _extends({\n        flexBasis: width,\n        flexGrow: 0,\n        maxWidth: width\n      }, more);\n    }\n\n    // No need for a media query for the first size.\n    if (theme.breakpoints.values[breakpoint] === 0) {\n      Object.assign(globalStyles, styles);\n    } else {\n      globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n    }\n    return globalStyles;\n  }, {});\n}\nexport function generateDirection({\n  theme,\n  ownerState\n}) {\n  const directionValues = resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  });\n  return handleBreakpoints({\n    theme\n  }, directionValues, propValue => {\n    const output = {\n      flexDirection: propValue\n    };\n    if (propValue.indexOf('column') === 0) {\n      output[`& > .${gridClasses.item}`] = {\n        maxWidth: 'none'\n      };\n    }\n    return output;\n  });\n}\n\n/**\n * Extracts zero value breakpoint keys before a non-zero value breakpoint key.\n * @example { xs: 0, sm: 0, md: 2, lg: 0, xl: 0 } or [0, 0, 2, 0, 0]\n * @returns [xs, sm]\n */\nfunction extractZeroValueBreakpointKeys({\n  breakpoints,\n  values\n}) {\n  let nonZeroKey = '';\n  Object.keys(values).forEach(key => {\n    if (nonZeroKey !== '') {\n      return;\n    }\n    if (values[key] !== 0) {\n      nonZeroKey = key;\n    }\n  });\n  const sortedBreakpointKeysByValue = Object.keys(breakpoints).sort((a, b) => {\n    return breakpoints[a] - breakpoints[b];\n  });\n  return sortedBreakpointKeysByValue.slice(0, sortedBreakpointKeysByValue.indexOf(nonZeroKey));\n}\nexport function generateRowGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    rowSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && rowSpacing !== 0) {\n    const rowSpacingValues = resolveBreakpointValues({\n      values: rowSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof rowSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: rowSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, rowSpacingValues, (propValue, breakpoint) => {\n      var _zeroValueBreakpointK;\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        return {\n          marginTop: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingTop: getOffset(themeSpacing)\n          }\n        };\n      }\n      if ((_zeroValueBreakpointK = zeroValueBreakpointKeys) != null && _zeroValueBreakpointK.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        marginTop: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingTop: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function generateColumnGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    columnSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && columnSpacing !== 0) {\n    const columnSpacingValues = resolveBreakpointValues({\n      values: columnSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof columnSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: columnSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, columnSpacingValues, (propValue, breakpoint) => {\n      var _zeroValueBreakpointK2;\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        return {\n          width: `calc(100% + ${getOffset(themeSpacing)})`,\n          marginLeft: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingLeft: getOffset(themeSpacing)\n          }\n        };\n      }\n      if ((_zeroValueBreakpointK2 = zeroValueBreakpointKeys) != null && _zeroValueBreakpointK2.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        width: '100%',\n        marginLeft: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingLeft: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function resolveSpacingStyles(spacing, breakpoints, styles = {}) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [styles[`spacing-xs-${String(spacing)}`]];\n  }\n  // in case of object `spacing`\n  const spacingStyles = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      spacingStyles.push(styles[`spacing-${breakpoint}-${String(value)}`]);\n    }\n  });\n  return spacingStyles;\n}\n\n// Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\nconst GridRoot = styled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      container,\n      direction,\n      item,\n      spacing,\n      wrap,\n      zeroMinWidth,\n      breakpoints\n    } = ownerState;\n    let spacingStyles = [];\n\n    // in case of grid item\n    if (container) {\n      spacingStyles = resolveSpacingStyles(spacing, breakpoints, styles);\n    }\n    const breakpointsStyles = [];\n    breakpoints.forEach(breakpoint => {\n      const value = ownerState[breakpoint];\n      if (value) {\n        breakpointsStyles.push(styles[`grid-${breakpoint}-${String(value)}`]);\n      }\n    });\n    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, ...spacingStyles, direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], ...breakpointsStyles];\n  }\n})(({\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box'\n}, ownerState.container && {\n  display: 'flex',\n  flexWrap: 'wrap',\n  width: '100%'\n}, ownerState.item && {\n  margin: 0 // For instance, it's useful when used with a `figure` element.\n}, ownerState.zeroMinWidth && {\n  minWidth: 0\n}, ownerState.wrap !== 'wrap' && {\n  flexWrap: ownerState.wrap\n}), generateDirection, generateRowGap, generateColumnGap, generateGrid);\nexport function resolveSpacingClasses(spacing, breakpoints) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [`spacing-xs-${String(spacing)}`];\n  }\n  // in case of object `spacing`\n  const classes = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      const className = `spacing-${breakpoint}-${String(value)}`;\n      classes.push(className);\n    }\n  });\n  return classes;\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    spacing,\n    wrap,\n    zeroMinWidth,\n    breakpoints\n  } = ownerState;\n  let spacingClasses = [];\n\n  // in case of grid item\n  if (container) {\n    spacingClasses = resolveSpacingClasses(spacing, breakpoints);\n  }\n  const breakpointsClasses = [];\n  breakpoints.forEach(breakpoint => {\n    const value = ownerState[breakpoint];\n    if (value) {\n      breakpointsClasses.push(`grid-${breakpoint}-${String(value)}`);\n    }\n  });\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', ...spacingClasses, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, ...breakpointsClasses]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const {\n    breakpoints\n  } = useTheme();\n  const props = extendSxProp(themeProps);\n  const {\n      className,\n      columns: columnsProp,\n      columnSpacing: columnSpacingProp,\n      component = 'div',\n      container = false,\n      direction = 'row',\n      item = false,\n      rowSpacing: rowSpacingProp,\n      spacing = 0,\n      wrap = 'wrap',\n      zeroMinWidth = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rowSpacing = rowSpacingProp || spacing;\n  const columnSpacing = columnSpacingProp || spacing;\n  const columnsContext = React.useContext(GridContext);\n\n  // columns set with default breakpoint unit of 12\n  const columns = container ? columnsProp || 12 : columnsContext;\n  const breakpointsValues = {};\n  const otherFiltered = _extends({}, other);\n  breakpoints.keys.forEach(breakpoint => {\n    if (other[breakpoint] != null) {\n      breakpointsValues[breakpoint] = other[breakpoint];\n      delete otherFiltered[breakpoint];\n    }\n  });\n  const ownerState = _extends({}, props, {\n    columns,\n    container,\n    direction,\n    item,\n    rowSpacing,\n    columnSpacing,\n    wrap,\n    zeroMinWidth,\n    spacing\n  }, breakpointsValues, {\n    breakpoints: breakpoints.keys\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: /*#__PURE__*/_jsx(GridRoot, _extends({\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref\n    }, otherFiltered))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid);\n  // eslint-disable-next-line no-useless-concat\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\nexport default Grid;"],"names":["Link","_ref","children","href","internal","test","___EmotionJSX","MuiLink","target","onClick","e","preventDefault","navigate","Footer","Box","Container","sx","py","align","my","label","link","map","i","key","component","m","src","logo","alt","style","display","width","pointerEvents","Typography","fontSize","Seo","title","pageTitle","site","siteMetadata","siteUrl","siteTitle","description","useStaticQuery","pathname","useLocation","isTop","React","name","content","property","rel","crossOrigin","getGridUtilityClass","slot","generateUtilityClass","GRID_SIZES","generateUtilityClasses","spacing","direction","wrap","size","_excluded","getOffset","val","parse","parseFloat","String","replace","extractZeroValueBreakpointKeys","breakpoints","values","nonZeroKey","Object","keys","forEach","sortedBreakpointKeysByValue","sort","a","b","slice","indexOf","GridRoot","styled","overridesResolver","props","styles","ownerState","container","item","zeroMinWidth","spacingStyles","Number","isNaN","breakpoint","value","push","resolveSpacingStyles","breakpointsStyles","root","boxSizing","flexWrap","margin","minWidth","theme","directionValues","propValue","output","flexDirection","maxWidth","rowSpacing","rowSpacingValues","zeroValueBreakpointKeys","_zeroValueBreakpointK","themeSpacing","marginTop","paddingTop","includes","columnSpacing","columnSpacingValues","_zeroValueBreakpointK2","marginLeft","paddingLeft","reduce","globalStyles","flexBasis","flexGrow","flexShrink","columnsBreakpointValues","columns","columnValue","Math","round","more","fullWidth","assign","up","useUtilityClasses","classes","spacingClasses","className","resolveSpacingClasses","breakpointsClasses","slots","composeClasses","Grid","inProps","ref","themeProps","useThemeProps","useTheme","extendSxProp","columnsProp","columnSpacingProp","rowSpacingProp","other","columnsContext","breakpointsValues","otherFiltered","Provider","clsx","as"],"sourceRoot":""}